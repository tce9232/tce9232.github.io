[{"authors":["admin"],"categories":null,"content":"Ted Carlson is a data scientist in Madison, Wisconsin with an M.S. in Analytics from Northwestern University. Data is at the center of the contemporary discourse and he aspires to be an active participant in these conversations by observing, collecting and analyzing the data around him. He is delighted to share his projects in an accessible way with his audience.\n","date":1549324800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1555459200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Ted Carlson is a data scientist in Madison, Wisconsin with an M.S. in Analytics from Northwestern University. Data is at the center of the contemporary discourse and he aspires to be an active participant in these conversations by observing, collecting and analyzing the data around him. He is delighted to share his projects in an accessible way with his audience.","tags":null,"title":"Ted Carlson","type":"authors"},{"authors":["Ted Carlson"],"categories":[],"content":"  Ask any music fanatic about their favorite music genre and you\u0026rsquo;re bound to get a lot of strong opinions. But with music constantly evolving and genres expanding, how much can you really infer from this preference? For Rock fans, you could favor the 1960s British invasion, classic rock 70s, prog-rock 80s, alternative rock 90s, or nu-metal early 2000s. All of these eras have distinctive sounds, and with it, mostly different fans.\nA lot of these musical differences could stem from the sound evolution that came from inventions like the electric guitar or drum machine, but I sought to quantify them in the lyrics themselves. There\u0026rsquo;s a list of stereotypes that many music fans intuitively know for each genre. For instance, Hip-Hop is angrier than Pop, which is happier than Country, which is sadder than Rock. A lot of these stereotypes stem from the sound and media portrayals, but I wanted to quantify these attributes by categorizing an artist\u0026rsquo;s lyrics, to see how often lyrics conveying a certain emotion appeared.\nIn order to do so, I needed two things: a song lyrics dataset and a map of english vocabulary and emotion. There are a lot of great music datasets out there, including the very popular Million Songs Dataset, but for my purposes, I was only interested in the artist, song year, song lyrics, and approximate genre. A dataset I pulled from Kaggle had this exact data for 380,000 songs, with the lyrics pulled from Metrolyrics. They had also sorted the songs into twelve genres including \u0026lsquo;Pop\u0026rsquo;, \u0026lsquo;Hip-Hop\u0026rsquo;, \u0026lsquo;Rock\u0026rsquo;, \u0026lsquo;Metal\u0026rsquo;, and \u0026lsquo;Country\u0026rsquo;.\nFor the second part of my data requirements, I used the NRC Emotion Lexicon. This is a list of English words and their associations with eight basic emotions (anger, fear, anticipation, trust, surprise, sadness, joy, and disgust) and two sentiments (negative and positive). These were manually categorized with crowdsourcing done by Saif Mohammad and Peter Turney. A lot of these categories overlap, so a word can show up in three categories like \u0026ldquo;negative\u0026rdquo;, \u0026ldquo;anger\u0026rdquo; and \u0026ldquo;disgust.\u0026rdquo;\nAfter creating the emotional words dictionaries, I needed to clean the lyrics in my dataset. I removed any whitespace or any character that wasn\u0026rsquo;t a standard alpha-numeric character. This was a problem with the contraction \u0026ldquo;I\u0026rsquo;ll\u0026rdquo; since within an apostrophe, it has a negative connotation, so I manually changed these to \u0026ldquo;I will.\u0026rdquo; Here\u0026rsquo;s an example of how the lyrics looked pre and post-cleaning.\nAfter the lyrics were cleaned, I wanted to shrink the time range because decades felt like too long. So I grouped every song into 5 year time windows like 1970-1974, 1975-1979, and so on. At this point, I wanted to take my analysis in two directions, so I wrote a script to categorize the lyrics at a genre level, and another to categorize them at an artist level.\nGenre-Level Lyric Emotions To start at a genre-level, I calculated the total proportion of words for each genre during each half-decade that represented each emotion. Plotting them all in a heatmap next to each other, we\u0026rsquo;re able to track how emotions have changed relative to time and each other. My first observation is that there seems to be a general shift to fewer positive lyrics over the last 50 years. This is most obviously seen in the Pop and R\u0026amp;B genres. This makes sense when you consider that the most commonly used positive lyrics are \u0026ldquo;love\u0026rdquo;, \u0026ldquo;baby\u0026rdquo; and \u0026ldquo;sweet,\u0026rdquo; which correspond pretty well to the stereotypical hippie culture of the 70s.\n  Plotly.d3.json(\"/plotly/positive-genre.json\", function(err, fig) { Plotly.plot('\\/plotly\\/positive-genre.json', fig.data, fig.layout, {responsive: true}); });  On the flip side, we can also take a look at how negative lyrics have been distributed over time. Unlike the positive word distribution, negative words are dominated by a single category: Metal. Since 1980, Metal has had around a 12% negative word rate, with the next closest genre being Hip-Hop at 7.5%. The types of negative words these two genres are using are also quite different. The most common negative lyrics in Metal are \u0026ldquo;pain\u0026rdquo;, \u0026ldquo;hate\u0026rdquo;, and \u0026ldquo;death\u0026rdquo;, whereas the most common negative Hip-Hop lyrics are \u0026ldquo;shit\u0026rdquo;, \u0026ldquo;ass\u0026rdquo; and \u0026ldquo;hit.\u0026rdquo;\n  Plotly.d3.json(\"/plotly/negative-genre.json\", function(err, fig) { Plotly.plot('\\/plotly\\/negative-genre.json', fig.data, fig.layout, {responsive: true}); });  Now that we\u0026rsquo;ve noticed some trends on a macro-level, let\u0026rsquo;s take the level of granularity down to the artist, as we focus on Pop, Metal and Hip-Hop.\nPop, Metal and Hip Hop Emotions We know that music genres are full of variety, which, as another school project of mine examined, can lead to a lot of grey areas between genres. In the following 3D scatter plot, I\u0026rsquo;ve tried to map the amount of positive, negative and angry words for a large sample of artists from Pop, Metal and Hip-Hop. We know that pop music can cover a wide-range of emotions on its own, but how does it compare to Hip-Hop? It turns out that even the most negative and angry pop singers like Avril Lavigne have a modest 6.2% positive rate and 7.5% negative rate. These numbers are comparable to the most positive and least angry rappers like Chamillionaire and Drake.\nSimilarly, Chief Keef, the single most negative and angry rapper in this database, would hardly crack the top half of negative lyrical emotions when it comes to Metal music. Chief Keef has about 5.5% positive lyrics, 9% negative and 12% angry, while Cannibal Corpse, one of the most negative and angry Metal bands has a similar amount of positive lyrics while maintaining an 11% angry lyric rate and whopping 22% negative lyric rate.\n  Plotly.d3.json(\"/plotly/3dLyricScatter.json\", function(err, fig) { Plotly.plot('\\/plotly\\/3dLyricScatter.json', fig.data, fig.layout, {responsive: true}); });  Although it\u0026rsquo;s interesting to compare lyrics across genres like this, let\u0026rsquo;s take a closer look at Rock, which is well known for having many different sub-genres.\nRock Music Emotions In the following scatter, you\u0026rsquo;ll see the distribution of rock bands by positive and negative emotion, with the size of the bubble representing how many lyrics were available for the artist. There are a couple outliers on every end of this plot, and a whole bunch of artists meeting in the middle.\nFirst, at the extreme positive end, we have Christian Rock singers like Chris Tomlin. He has a 25% positive rate vs only an 8% negative rate. His most used negative words \u0026ldquo;cross\u0026rdquo; and \u0026ldquo;sin\u0026rdquo; are also as you\u0026rsquo;d expect from a Christian singer.\nOn the negative side, you have GG Allin, the largest bubble on top of the graph. GG is an infamous punk rock musician who\u0026rsquo;s mostly famous for his extreme antics like deficating on-stage, and constant arrests. It\u0026rsquo;s no suprise we find him with a three times higher negative than positive lyrical sentiment.\nFinally, there also seems to be a cluster away from everyone else and much closer to the origin. After looking at a few band names from here like Die Toten Hosen and Echt, it\u0026rsquo;s clear that these represent non-English speaking artists. A future iteration of this project could create emotion dictionaries beyond the English language.\n  Plotly.d3.json(\"/plotly/2dRockLyricScatter.json\", function(err, fig) { Plotly.plot('\\/plotly\\/2dRockLyricScatter.json', fig.data, fig.layout, {responsive: true}); });  It can be fun to look at the extremes in these charts, but even artists right in the middle of the cluster can have ebbs and flows to their lyrical emotions over the course of their career. To illustrate, I created a heatmap for the emotions of David Bowie songs through time.\n  Plotly.d3.json(\"/plotly/david-bowie-heatmap.json\", function(err, fig) { Plotly.plot('\\/plotly\\/david-bowie-heatmap.json', fig.data, fig.layout, {responsive: true}); });  There\u0026rsquo;s a small gap in this data in the 1990s, but the first observation that jumps out to me is how positive and joyful his music was in the late 80s and early 2000s. This could be the result of a rock icon in the latter half of his career, able to star in movies, voice video game characters, and bring anyone they want into the studio.\nDavid Bowie passed away of liver cancer two days before he released his final album Blackstar in 2016. He kept his diagnosis secret for 18 months while he worked on his off-Broadway musical and recorded this farewell album. Given these circumstances, I find it notable that the surprise, anger, sadness and fear all increased, while his trust was decreased for this album.\nConclusion Most of us know which music energizes us, and which slows us down or helps us focus. We might have even created Spotify playlists for these situations. But it\u0026rsquo;s not just the tempo and instruments that contribute to this energy, we can find these emotions intentionally written into the songs. Properly quantifying this helps us compare artists across genres, artists within genres, and even artists against themselves.\nPeople should use this analysis not only to track what kind of music they like, but also to find new music that suits their style. Do you like the energy of Tupac? Maybe you\u0026rsquo;ll like French Montana. Are the Beach Boys more your speed? Try Chuck Berry.\nThank you to everyone that helped me with this project, including Hilal Kasikci and Andrew Brandt. Thanks to Matt Daniels at The Pudding, whose article on emo rap lyrics inspired this project. If you\u0026rsquo;d like to learn more about this project, or give feedback, feel free to email me or follow me on LinkedIn.\n","date":1606592462,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606592462,"objectID":"8d143e676ada7ce3db2013c000fa86ec","permalink":"/project/song-emotions/","publishdate":"2020-11-28T13:41:02-06:00","relpermalink":"/project/song-emotions/","section":"project","summary":"An examination of the changing landscape of song lyric emotion, and how different artists and genres compare","tags":["Natural Language Processing","Data Visualization"],"title":"Analyzing Music and Emotion with NLP","type":"project"},{"authors":["Ted Carlson"],"categories":[],"content":"This article describes the data collection, cleaning and visualization processes behind my Madison Landlord Lookup tool. If you\u0026rsquo;d like to check out the tool first, please follow the link.\nIntroduction Everyone who has changed leases in Madison Wisconsin, or even just picked the wrong day in August to visit Madison friends, knows the horrors of Madison moving day. For those that haven’t experienced this ritual, because of the way Madison landlords structure their leases, thousands of renters are forced to move out a full day, or even up to a couple weeks before their new lease kicks in. This day is celebrated by those willing to scour the stacks of furniture and unwanted items piled on curbs, but meanwhile, those with expiring leases are forced to enter a battle for U-Hauls and parking spaces, while making sure they secure a spot to stay for the night. Some unlucky tenants moving from August 15th to August 1st leases will have to pay double rent for the first half of August, and those going the opposite direction won\u0026rsquo;t have any lease for the same time period. For people that have lived in Madison as long as I have, this might seem almost normal. But for those that are new students or new to the Madison renting schedule, this phenomenon is hard to understand.\nMoving day, or \u0026ldquo;hippie Christmas\u0026rdquo; as some locals call it, is a gift from a property management perspective. It balances out their leases so they only have to pay for maintenance and cleaning during one day, and since month-to-month leases aren’t common, they don’t have to worry about constantly finding new tenants. There’s a very predictable yearly leasing pattern that allows them to properly market and sell their properties at the highest price possible.\nThis is a stark contrast to the experience of renters. Moving day seemed especially dangerous this year, as the log jam of movers, temporary couch crashing, and warp-speed sanitization for the sake of landlord convenience created a perfect storm of COVID transmission. Some of this could have been alleviated with a public university system that prioritized public health over student housing income, seg fees, and \u0026ldquo;student experience,\u0026rdquo; but that is a (mostly) separate issue.\nSo what gives? Why are landlords allowed to force tenants to accommodate to their schedule, and why doesn’t our state and local government push back? Entire books can be written about how biased Wisconsin housing laws are towards landlords. And Madison is still primarily a college town, which can lead to more predatory leases. But I wanted to take a closer look at the networks of Madison properties and their owners to see if I could visualize the extent to which the properties downtown and near campus are monopolized by just a handful of property management companies. Creating this visualization/tool could also lead to better tenant organization, as tenants would easily be able to see which addresses were owned by the same landlord.\nData Scraping The City of Madison Assessor’s Office website allows you to search and obtain data for any commercial or residential property in Madison. By doing some manual work and a bit of web scraping, I was able to obtain a link to every property in Madison that was owned by an entity that starts with a standard English alpha-numeric character. Another python script visited each of those pages and scraped information like the address, owner name, property value, property type (Apartment, Condo, etc..) and property class (commercial, residential, etc..). Here’s an example of the text parsing require to get a property’s address:\naddress = soup.find(\u0026#39;span\u0026#39;, class_=\u0026#39;nav-heading\u0026#39;) p = re.compile(\u0026#39;Address[\\s]+([\\w ,\u0026amp;-+%#]+)\u0026#39;) Data Cleaning In order to properly clean the data, I needed to fill missing values with zeros and remove the dollar sign from the property values. For the purposes of this project, I combined both Condos and Apartments as “Apartments”. This is because the owners of these condos according to the Assessor’s website are often the owners of the building.\nThe most important aspect of the cleaning was finding a proper mapping for owner names. This is challenging because you’ll often have the same owner with different names depending on the building. Some of these are typos, but most of them are a result of displaying additional information in the owner name, like the address or name of the property manager (who usually works for the property management company). This was the most labor intensive aspect of the project, and I couldn’t find a better way to accomplish this except looking for key characters that would indicate something like this happening (# was often used before an address or property manager name) or searching for the biggest rental companies I knew in Madison and seeing if they had a consistent naming pattern.\nOnce this owner name cleaning was done, I was able to calculate the number of units from each apartment by parsing the building information using the following python code:\np = re.compile(\u0026#39;([\\d]+) unit\u0026#39;) df[\u0026#39;Units\u0026#39;] = df[\u0026#39;property_type\u0026#39;].str.findall(p) df[\u0026#39;Units\u0026#39;] = pd.to_numeric(df[\u0026#39;Units\u0026#39;].apply(lambda x: 1 if not x else x if isinstance(x, float) else x[0])) This code looks for the word “unit” in the property type description. If it finds it, the number directly before it is added to the dataset. Otherwise, it’s assumed this building is one unit. I was then able to sum the total number of buildings, units, and property value for each owner name, which helped create aggregated statistics for each property owner across Madison.\nAt this point, I had to make a decision about which properties should be included in this dataset. I didn’t want to include private personal properties, but I still wanted to make sure I was including houses that got split into floors and were leased out, as they constitute a majority of the units around campus. For these reasons, I included any apartments or single family homes that were either owned by somebody with multiple properties or had a value over $1 million. This isn’t a perfect metric, as there are obviously private homes worth more than $1 million in Madison, but it was the only way I found to ensure the inclusion of large apartment complexes that were, for whatever reason, classified as single family homes.\nOnce I finalized the properties that would be included in the visualization, I converted each of their text addresses into long-lats using GeoPy in the following code:\n# 1 - conveneint function to delay between geocoding calls geocode = RateLimiter(locator.geocode, min_delay_seconds=1) landlordDF[\u0026#39;exact_address\u0026#39;] = landlordDF[\u0026#39;address\u0026#39;].apply(lambda x: str(x) + \u0026#34; Madison, Wisconsin USA\u0026#34;) # 2- - create location column landlordDF[\u0026#39;location\u0026#39;] = landlordDF[\u0026#39;exact_address\u0026#39;].apply(geocode) # 3 - create longitude, laatitude and altitude from location column (returns tuple) landlordDF[\u0026#39;point\u0026#39;] = landlordDF[\u0026#39;location\u0026#39;].apply(lambda loc: tuple(loc.point) if loc else None) # 4 - split point column into latitude, longitude and altitude columns landlordDF[[\u0026#39;latitude\u0026#39;, \u0026#39;longitude\u0026#39;, \u0026#39;altitude\u0026#39;]] = pd.DataFrame(landlordDF[\u0026#39;point\u0026#39;].tolist(), index=landlordDF.index) This step is tricky, as you can easily max out on calls to GeoPy if you don’t limit your call attempts. But after almost a full day of letting this code run, it allowed me to convert the data into a GeoJSON format, which is easily readable by Mapbox.\nData Analysis After gathering and aggregating this data, my first goal was to see which landlords owned the most property value in Madison. Looking at the top ten landlords by property value, it becomes clear that owning a large luxury apartment complex or two will add to a higher value than dozens of multi-unit homes or small apartment buildings.\n    Plotly.d3.json(\"/plotly/Properties-Owner-Bar.json\", function(err, fig) { Plotly.plot('\\/plotly\\/Properties-Owner-Bar.json', fig.data, fig.layout, {responsive: true}); }); \nEvery owner except Forward Management, who owns a smattering of properties on the far East and West sides, owns 11 or fewer buildings. The landlord with the highest valued portfolio is Core Campus Madison LLC, who owns The Hub and The James, two gigantic luxury apartment complexes near downtown and campus. Since I noticed this trend of landlords with fewer properties owning the most property value, I wanted to see how this relationship looked across all landlords in my database.\n  Plotly.d3.json(\"/plotly/Value-Properties-Scatter.json\", function(err, fig) { Plotly.plot('\\/plotly\\/Value-Properties-Scatter.json', fig.data, fig.layout, {responsive: true}); });  The plot seems to tell us that landlords with fewer properties tend to own more valuable ones, but landlords with more properties own relatively little in value. This seems to be because developers of large luxury apartments tend to just own a few properties, but manage hundreds of units. On the flip side, there are some landlords like Madtown Properties Inc and Madison Opera Inc that own large buildings of condos that are individually listed at very low prices. Madtown Properties Inc owns the condos near Hilldale Mall, which are valued at only $15,000 each, and Madison Opera Inc owns the condos on 23 N Brooms St, which are valued at $8,000 each.\nPerhaps a better visualization would be to look at a landlord’s total values against their total number of rental units.\n  Plotly.d3.json(\"/plotly/Value-Units-Scatter.json\", function(err, fig) { Plotly.plot('\\/plotly\\/Value-Units-Scatter.json', fig.data, fig.layout, {responsive: true}); });  This plot shows a much stronger positive correlation between units and property value. Core Campus ends up at the high end of the chart above the trend line because of their luxury apartment value, and owners like Nob Hill Investments, with affordable apartments on the far south side, end up on the lower end of the linear trend.\nVisualizing this data helps us understand how the Madison rental property value is distributed among its landlords. But Madison is a city with many (relatively) unique neighborhoods, and in order to better understand these landlord’s relationships with the community, we need to see where they own property in relation to campus, downtown and the suburbs.\nPlotting with Mapbox You can find the most recent version of the Mapbox visualization at the following link: Madison Landlord Lookup\nThe goal for my final visualization was to give the user some basic statistics for Madison properties both on the individual property and property owner levels. The constantly floating tooltip in the upper left corner gives the user these stats about whichever property was the last one they hovered over.\nSince there are so many properties, I also found it important to let the user only focus on those that are of interest to them. Whenever you’re hovering over a property, it’s highlighted pink, as well as any other properties that are owned by the same landlord. There’s also a toggle built in that lets you click on any individual property and remove any points on the map that aren’t owned by the same landlord. This can all be reset by clicking the “reset map” button or any blank area.\nAlthough I believe this map can be informative as is, I welcome any feedback or feature improvements to either the data consolidation, cleaning or visualization processes.\nConclusion Although aspects of Madison’s rental market, like the insane August rituals and inflexible leases, may feel unique, I suspect that a lot of the patterns we find in this data would be reflected in most medium to large cities in this country.\nMy goal with this project was to build a tool that helped tenants understand the reach of their landlord, and assist with tenant organizing when possible. There’s still work to be done in order to make this tool usable in that way, but I hope that this project is motivating for others willing to create something similar for their city. For questions or comments about this project, please feel free to reach out to me via email.\nI want to give credit to Noah Cote and the Chicago DSA, as their work with similar projects in their own cities inspired me to get started on one in my own much smaller city. Noah also had a brilliant article about his project that is definitely worth your time. You can read it here.\n","date":1605469262,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1605469262,"objectID":"896d1716fb1f1ef5d26bc9286e4ec160","permalink":"/project/madison-landlords/","publishdate":"2020-11-15T13:41:02-06:00","relpermalink":"/project/madison-landlords/","section":"project","summary":"Examining the rental landscape of Madison, Wisconsin","tags":["Web Scraping","MapBox"],"title":"Madison Landlord Lookup Tool","type":"project"},{"authors":null,"categories":null,"content":"  ","date":1580774400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1580774400,"objectID":"6a9ba3d3c9fbfef7894b1800ce1f6b6b","permalink":"/project/oscars-so-white/","publishdate":"2020-02-04T00:00:00Z","relpermalink":"/project/oscars-so-white/","section":"project","summary":"Searching for gender parody in Academy Award nominations and winners","tags":["D3","Movies"],"title":"Oscars So White (Again)","type":"project"},{"authors":null,"categories":null,"content":"","date":1573344000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1573344000,"objectID":"5eccd7ffdba13c2f0918bcb3f5e96d31","permalink":"/project/student-loans/","publishdate":"2019-11-10T00:00:00Z","relpermalink":"/project/student-loans/","section":"project","summary":"An analysis of the student loans industry written for the Northwestern Analytics Research Blog","tags":["College","D3","Clustering"],"title":"Student Loans","type":"project"},{"authors":["Ted Carlson"],"categories":[],"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;) print(\u0026#34;Welcome to academia!\u0026#34;) Welcome to academia!  Install Python and Jupyter Install Anaconda which includes Python 3 and Jupyter notebook.\nOtherwise, for advanced users, install Jupyter notebook with pip3 install jupyter.\nCreate a new blog post as usual Run the following commands in your Terminal, substituting \u0026lt;MY_WEBSITE_FOLDER\u0026gt; and my-post with the file path to your academia website folder and a name for your blog post (without spaces), respectively:\ncd \u0026lt;MY_WEBSITE_FOLDER\u0026gt; hugo new --kind post post/my-post cd \u0026lt;MY_WEBSITE_FOLDER\u0026gt;/content/post/my-post/ Create or upload a Jupyter notebook Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (New \u0026gt; Python Notebook) or upload a notebook.\njupyter notebook Convert notebook to Markdown jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=. # Copy the contents of Untitled.md and append it to index.md: cat Untitled.md | tee -a index.md # Remove the temporary file: rm Untitled.md Edit your post metadata Open index.md in your text editor and edit the title etc. in the front matter according to your preference.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with academia.\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in academia using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with academia","type":"post"},{"authors":["Ted Carlson"],"categories":[],"content":"Create a free website with academia using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 widgets, themes, and language packs included!\nCheck out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\n Setup academia Get Started View the documentation Ask a question Request a feature or report a bug Updating? View the Update Guide and Release Notes Support development of academia:  Donate a coffee Become a backer on Patreon Decorate your laptop or journal with an academia sticker Wear the T-shirt    \nKey features:\n Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 15+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Color Themes academia comes with day (light) and night (dark) mode built-in. Click the sun/moon icon in the top right of the Demo to see it in action!\nChoose a stunning color and font theme for your site. Themes are fully customizable and include:\n         Ecosystem  academia Admin: An admin tool to import publications from BibTeX or import assets for an offline site academia Scripts: Scripts to help migrate content to new versions of academia  Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Then personalize and deploy your new site.\nUpdating View the Update Guide.\nFeel free to star the project on Github to help keep track of updates.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555459200,"objectID":"737a4d9f40e4da19ee82ee5cb6985167","permalink":"/post/snail/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/post/snail/","section":"post","summary":"Create a beautifully simple website in under 10 minutes.","tags":["academia"],"title":"A Study of Snail Behavior","type":"post"},{"authors":["Ted Carlson"],"categories":[],"content":"Create a free website with academia using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 widgets, themes, and language packs included!\nCheck out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\n Setup academia Get Started View the documentation Ask a question Request a feature or report a bug Updating? View the Update Guide and Release Notes Support development of academia:  Donate a coffee Become a backer on Patreon Decorate your laptop or journal with an academia sticker Wear the T-shirt    \nKey features:\n Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 15+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Color Themes academia comes with day (light) and night (dark) mode built-in. Click the sun/moon icon in the top right of the Demo to see it in action!\nChoose a stunning color and font theme for your site. Themes are fully customizable and include:\n         Ecosystem  academia Admin: An admin tool to import publications from BibTeX or import assets for an offline site academia Scripts: Scripts to help migrate content to new versions of academia  Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Then personalize and deploy your new site.\nUpdating View the Update Guide.\nFeel free to star the project on Github to help keep track of updates.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555459200,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"/post/getting-started/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Create a beautifully simple website in under 10 minutes.","tags":["academia"],"title":"academia: the website builder for Hugo","type":"post"},{"authors":null,"categories":["R"],"content":" R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932  Including Plots You can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;), col = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;), init.angle = -50, border = NA )  Figure 1: A fancy pie chart.   ","date":1437703994,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437703994,"objectID":"10065deaa3098b0da91b78b48d0efc71","permalink":"/post/2015-07-23-r-rmarkdown/","publishdate":"2015-07-23T21:13:14-05:00","relpermalink":"/post/2015-07-23-r-rmarkdown/","section":"post","summary":"R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"}]